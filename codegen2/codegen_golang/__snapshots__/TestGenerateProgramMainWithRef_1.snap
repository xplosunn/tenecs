package main

import ()

func main__app() any {
    return tenecs_go__Main().(func(any) any)(func(_runtime any) any {
        _ref := _runtime.(map[string]any)["_ref"].(map[string]any)["_new"].(func(any) any)(map[string]any{"$type": "String", "value": "hello"})
        _runtime.(map[string]any)["_console"].(map[string]any)["_log"].(func(any) any)(_ref.(map[string]any)["_get"].(func() any)())
        _ref.(map[string]any)["_set"].(func(any) any)(map[string]any{"$type": "String", "value": "world"})
        return _runtime.(map[string]any)["_console"].(map[string]any)["_log"].(func(any) any)(_ref.(map[string]any)["_get"].(func() any)())
    })
}

func tenecs_go__Main() any {
    log := func(msg any) any {
        println(msg.(map[string]any)["value"].(string))
        return nil
    }
    console := map[string]any{
        "_log": log,
    }
    refCreator := map[string]any{
        "_new": func(value any) any {
            var ref any = value
            return map[string]any{
                "_get": func() any {
                    return ref
                },
                "_set": func(value any) any {
                    ref = value
                    return nil
                },
                "_modify": func(f any) any {
                    ref = f.(func(any) any)(ref)
                    return nil
                },
            }
        },
    }
    runtime := map[string]any{
        "_console": console,
        "_ref":     refCreator,
    }
    return func(run any) any {
        return run.(func(any) any)(runtime)
    }
}

func main() {
    main__app()
}
